@model CreateSprintModel
@using PMS.Web.HtmlHelpers

@{
    ViewBag.Title = @Html.Text("Sprints");
    Layout = "~/Views/Shared/_PrivateLayout.cshtml";
}
@using (Html.BeginForm("Save","Sprint"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@Html.Text("Edit sprint")</h4>
        <hr/>
        @Html.HiddenFor(x=>x.Id)
        @Html.HiddenFor(x=>x.Version)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectVersion, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-5">
                @Html.EditorFor(model => model.ProjectVersion, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ProjectVersion, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StartTime, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-5">
                @Html.EditorFor(model => model.StartTime, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StartTime, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.ProjectId, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.ProjectId,
                    Model.ProjectLookupItems.Select(x => new SelectListItem()
                    {
                        Value = x.Id.ToString(),
                        Text = x.Value
                    }), new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.ProjectId, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@Html.Text("Save")" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div class="col-md-offset-2">
    @Html.ActionLink("Back to List", "Index", null, new {@class="btn btn-info"})
</div>
