@model CreateIssueModel
@using PMS.Web.HtmlHelpers

@{
    ViewBag.Title = @Html.Text("Issues");
    Layout = "~/Views/Shared/_PrivateLayout.cshtml";
}
<h2>@Html.Text("Create issue")</h2>
@using (Html.BeginForm("Save","Issue"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@Html.Text("New issue")</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-5">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-5">
                @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-5">
                @Html.EnumDropDownListFor(model => model.Type, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.Type, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Priority, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-5">
                @Html.EnumDropDownListFor(model => model.Priority, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.Priority, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EstimatedTime, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-5">
                @Html.EditorFor(model => model.EstimatedTime, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.EstimatedTime, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ProjectId, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.ProjectId,
                    Model.ProjectLookupItems.Select(x => new SelectListItem()
                    {
                        Value = x.Id.ToString(),
                        Text = x.Value
                    }), new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.ProjectId, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AssigneeId, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.AssigneeId,
                    Model.PrincipalLookupItems.Select(x => new SelectListItem()
                    {
                        Value = x.Id.ToString(),
                        Text = x.Value
                    }), new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.AssigneeId, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SprintId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownListFor(model => model.SprintId,
                    Model.SprintLookupItems.Select(x => new SelectListItem()
                    {
                        Value = x.Id.ToString(),
                        Text = x.Value
                    }), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SprintId, "", new { @class = "text-danger" })
            </div>
        </div>
       <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@Html.Text("Save")" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div class="col-md-offset-2">
    @Html.ActionLink("Back to List", "Index", null, new {@class="btn btn-info"})
</div>
